<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.meongnyang.shop.repository.ProductMapper">

    <resultMap id="productResultMap" type="com.meongnyang.shop.entity.Product">
        <id property="id" column="id"/>
        <result property="productName" column="product_name" />
        <result property="petGroupId" column="pet_group_id" />
        <result property="categoryId" column="category_id" />
        <result property="productPrice" column="product_price" />
        <result property="productPriceDiscount" column="product_price_discount" />
        <result property="productDetail" column="product_detail" />
        <result property="productBrand" column="product_brand" />
        <result property="productModel" column="product_model" />
        <result property="productMemo" column="product_memo" />
        <result property="productCreateDate" column="product_create_date" />
        <result property="productUpdateDate" column="product_update_date" />
        <result property="recommendation" column="recommendation" />
        <association property="petGroup" resultMap="petGroupResultMap" />
        <association property="category" resultMap="categoryResultMap" />
        <collection property="imgUrls" javaType="java.util.List" resultMap="imgUrlResultMap" />
    </resultMap>

    <resultMap id="imgUrlResultMap" type="com.meongnyang.shop.entity.ImgUrl" >
        <id property="id" column="iu_id" />
        <result property="productId" column="iu_product_id" />
        <result property="imgPath" column="img_path" />
        <result property="imgName" column="img_name" />
    </resultMap>

    <resultMap id="petGroupResultMap" type="com.meongnyang.shop.entity.PetGroup" >
        <id property="id" column="pg_id" />
        <result property="categoryGroupName" column="category_group_name" />
    </resultMap>

    <resultMap id="categoryResultMap" type="com.meongnyang.shop.entity.Category" >
        <id property="id" column="c_id" />
        <result property="categoryName" column="category_name" />
    </resultMap>

    <insert id="save" useGeneratedKeys="true" keyProperty="id">
        insert into product_tb
        values(default, #{productName}, #{petGroupId}, #{categoryId}, #{productPrice},#{productPriceDiscount}, #{productDetail},
        #{productBrand}, #{productModel}, #{productMemo}, now(), now(), #{recommendation})
    </insert>
    <update id="modifyProduct">
        update product_tb
        set
            product_name = #{productName},
            pet_group_id = #{petGroupId},
            category_id = #{categoryId},
            product_price = #{productPrice},
            product_price_discount = #{productPriceDiscount},
            product_detail = #{productDetail},
            product_brand = #{productBrand},
            product_model = #{productModel},
            product_memo = #{productMemo},
            product_update_date = now(),
            recommendation = #{recommendation}
        where
            id = #{id}
    </update>
    <delete id="deleteProductAll">
        truncate table product_tb
    </delete>
    <delete id="deleteProductById">
        delete
        from
            product_tb
        where id in
        <foreach item="id" collection="idList" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
    <select id="findProductsCount" resultType="java.lang.Integer">
        select
            count(*)
        from
            product_tb
    </select>
    <select id="findProducts" resultMap="productResultMap">
        select
            p.id,
            p.product_name,
            p.pet_group_id,
            p.category_id,
            p.product_price,
            p.product_price_discount,
            p.product_detail,
            p.product_brand,
            p.product_model,
            p.product_memo,
            p.product_create_date,
            p.product_update_date,
            p.recommendation,
            pg.id as pg_id,
            pg.category_group_name,
            c.id as c_id,
            c.category_name,
            iu.id as iu_id,
            iu.product_id as iu_product_id,
            iu.img_path,
            iu.img_name
        from
            product_tb p
            left outer join pet_group_tb pg on(p.pet_group_id = pg.id)
            left outer join category_tb c on(p.category_id = c.id)
            left outer join img_url_tb iu on(p.id = iu.product_id)
    </select>
    <select id="findProductsCountByOption" resultType="java.lang.Integer">
        select
            count(*)
        from
            product_tb
        where
            #{option} = #{searchWord}
    </select>
    <select id="findProductsByOption" resultMap="productResultMap">
        select
            p.id,
            p.product_name,
            p.pet_group_id,
            p.category_id,
            p.product_price,
            p.product_price_discount,
            p.product_detail,
            p.product_brand,
            p.product_model,
            p.product_memo,
            p.product_create_date,
            p.product_update_date,
            p.recommendation,
            pg.id as pg_id,
            pg.category_group_name,
            c.id as c_id,
            c.category_name,
            iu.id as iu_id,
            iu.product_id as iu_product_id,
            iu.img_path,
            iu.img_name
        from
            product_tb p
            left outer join pet_group_tb pg on(p.pet_group_id = pg.id)
            left outer join category_tb c on(p.category_id = c.id)
            left outer join img_url_tb iu on(p.id = iu.product_id)
        where
            1 = 1
            <if test='option.equals("all")'>
                and (
                    p.id like concat('%', trim(ifnull(#{searchWord}, '')), "%")
                    or p.product_name like concat('%', trim(ifnull(#{searchWord}, '')), "%")
                    or pg.category_group_name like concat('%', trim(ifnull(#{searchWord}, '')), "%")
                    or c.category_name like concat('%', trim(ifnull(#{searchWord}, '')), "%")
                )
            </if>
            <if test='option.equals("code")'>
                and (
                    p.id like concat('%', trim(ifnull(#{searchWord}, '')), "%")
                )
            </if>
            <if test='option.equals("product")'>
                and (
                    p.product_name like concat('%', trim(ifnull(#{searchWord}, '')), "%")
                )
            </if>
            <if test='option.equals("category")'>
                and (
                    pg.category_group_name like concat('%', trim(ifnull(#{searchWord}, '')), "%")
                    or c.category_name like concat('%', trim(ifnull(#{searchWord}, '')), "%")
                )
            </if>
        limit #{startIndex}, #{limit}
    </select>

    <select id="findProductsList" resultMap="productResultMap">
        select
        p.id,
        p.product_name,
        p.pet_group_id,
        p.category_id,
        p.product_price,
        p.product_price_discount,
        p.product_brand,
        pg.id as pg_id,
        pg.category_group_name,
        c.id as c_id,
        c.category_name,
        iu.id as iu_id,
        iu.product_id as iu_product_id,
        iu.img_path,
        iu.img_name
        from
        product_tb p
        left outer join pet_group_tb pg on(p.pet_group_id = pg.id)
        left outer join category_tb c on(p.category_id = c.id)
        left outer join img_url_tb iu on(p.id = iu.product_id)
    </select>
    <select id="getProductsCount" resultType="java.lang.Integer">
        select
            count(*)
        from
            product_tb
    </select>
    <select id="findProductById" resultMap="productResultMap">
        select
            p.id,
            p.product_name,
            p.pet_group_id,
            p.category_id,
            p.product_price,
            p.product_price_discount,
            p.product_detail,
            p.product_brand,
            p.product_model,
            p.product_memo,
            p.product_create_date,
            p.product_update_date,
            p.recommendation,
            pg.id as pg_id,
            pg.category_group_name,
            c.id as c_id,
            c.category_name,
            iu.id as iu_id,
            iu.product_id as iu_product_id,
            iu.img_path,
            iu.img_name
        from
            product_tb p
            left outer join pet_group_tb pg on(p.pet_group_id = pg.id)
            left outer join category_tb c on(p.category_id = c.id)
            left outer join img_url_tb iu on(p.id = iu.product_id)
        where
            id = #{id}
    </select>
    <select id="findProductsPage" resultMap="productResultMap">
        select
            p.id,
            p.product_name,
            p.pet_group_id,
            p.category_id,
            p.product_price,
            p.product_price_discount,
            p.product_brand,
            p.product_model,
            p.product_create_date,
            p.product_update_date,
            p.recommendation,
            pg.id as pg_id,
            pg.category_group_name,
            c.id as c_id,
            c.category_name,
            iu.id as iu_id,
            iu.img_path,
            iu.img_name
        from
            product_tb p
            left outer join pet_group_tb pg on(p.pet_group_id = pg.id)
            left outer join category_tb c on(p.category_id = c.id)
            left outer join img_url_tb iu on(p.id = iu.product_id)
        where
            1 = 1
            <if test="petGroupId != 0">
                AND p.pet_group_id = #{petGroupId}
            </if>
            <if test="categoryId != 0">
                and p.category_id = #{categoryId}
            </if>
        group by
            p.id,
            p.product_name,
            p.pet_group_id,
            p.category_id,
            p.product_price,
            p.product_brand,
            p.product_update_date,
            p.recommendation
        order by
        <choose>
            <when test="orderBy == '신상품'">
                product_update_date DESC
            </when>
            <when test="orderBy == '상품명'">
                product_name ASC
            </when>
            <when test="orderBy == '낮은가격'">
                product_price ASC
            </when>
            <when test="orderBy == '높은가격'">
                product_price DESC
            </when>
            <when test="orderBy == '제조사'">
                product_brand DESC
            </when>
            <when test="orderBy == '인기상품'">
                recommendation DESC
            </when>
        </choose>
        LIMIT
        #{startIndex}, #{count}
    </select>
    <select id="findCategoriesCount" resultType="java.lang.Integer">
    select
        count(*)
    from
        product_tb p
    where
        1 = 1
        <if test="petGroupId != 0">
            AND p.pet_group_id = #{petGroupId}
        </if>
        <if test="categoryId != 0">
            and p.category_id = #{categoryId}
        </if>
        <if test="searchWord != null and searchWord != ''">
            AND p.product_name LIKE CONCAT('%', #{searchWord}, '%')
        </if>
    </select>
    <select id="findProductDetailById" resultMap="productResultMap">
        select
            p.id,
            p.product_name,
            p.pet_group_id,
            p.category_id,
            p.product_price,
            p.product_price_discount,
            p.product_detail,
            p.product_brand,
            p.product_model,
            p.product_memo,
            p.product_create_date,
            p.product_update_date,
            p.recommendation,
            pg.id as pg_id,
            pg.category_group_name,
            c.id as c_id,
            c.category_name,
            iu.id as iu_id,
            iu.product_id as iu_product_id,
            iu.img_path,
            iu.img_name
        from
            product_tb p
            left outer join pet_group_tb pg on(p.pet_group_id = pg.id)
            left outer join category_tb c on(p.category_id = c.id)
            left outer join img_url_tb iu on(p.id = iu.product_id)
        where
            p.id = #{id}
    </select>

</mapper>


